{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"prefect-stitch Welcome! Prefect collection to interact with Stitch Getting Started Python setup Requires an installation of Python 3.7+. We recommend using a Python virtual environment manager such as pipenv, conda or virtualenv. These tasks are designed to work with Prefect 2.0. For more information about how to use Prefect, please refer to the Prefect documentation . Installation Install prefect-stitch with pip : pip install prefect-stitch Write and run a flow from prefect import flow from prefect_stitch.tasks import ( start_replication_job ) @flow def example_flow (): start_replication_job ( access_token = \"my_secret_token\" , source_id = 1234 ) example_flow () Resources If you encounter any bugs while using prefect-stitch , feel free to open an issue in the prefect-stitch repository. If you have any questions or issues while using prefect-stitch , you can find help in either the Prefect Discourse forum or the Prefect Slack community . Development If you'd like to install a version of prefect-stitch for development, clone the repository and perform an editable install with pip : git clone https://github.com/AlessandroLollo/prefect-stitch.git cd prefect-stitch/ pip install -e \".[dev]\" # Install linting pre-commit hooks pre-commit install","title":"Home"},{"location":"#prefect-stitch","text":"","title":"prefect-stitch"},{"location":"#welcome","text":"Prefect collection to interact with Stitch","title":"Welcome!"},{"location":"#getting-started","text":"","title":"Getting Started"},{"location":"#python-setup","text":"Requires an installation of Python 3.7+. We recommend using a Python virtual environment manager such as pipenv, conda or virtualenv. These tasks are designed to work with Prefect 2.0. For more information about how to use Prefect, please refer to the Prefect documentation .","title":"Python setup"},{"location":"#installation","text":"Install prefect-stitch with pip : pip install prefect-stitch","title":"Installation"},{"location":"#write-and-run-a-flow","text":"from prefect import flow from prefect_stitch.tasks import ( start_replication_job ) @flow def example_flow (): start_replication_job ( access_token = \"my_secret_token\" , source_id = 1234 ) example_flow ()","title":"Write and run a flow"},{"location":"#resources","text":"If you encounter any bugs while using prefect-stitch , feel free to open an issue in the prefect-stitch repository. If you have any questions or issues while using prefect-stitch , you can find help in either the Prefect Discourse forum or the Prefect Slack community .","title":"Resources"},{"location":"#development","text":"If you'd like to install a version of prefect-stitch for development, clone the repository and perform an editable install with pip : git clone https://github.com/AlessandroLollo/prefect-stitch.git cd prefect-stitch/ pip install -e \".[dev]\" # Install linting pre-commit hooks pre-commit install","title":"Development"},{"location":"tasks/","text":"prefect_stitch.tasks Collection of tasks to interact with Stitch APIs. start_replication_job This task starts a new Stitch replication job using the provided source. Parameters: Name Type Description Default access_token str API access token that will be used to authenticate API calls. required source_id int integer identifier of the source that will be used in the replication job. required Returns: Type Description Dict Replication job API JSON response. Source code in prefect_stitch/tasks.py 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 @task def start_replication_job ( access_token : str , source_id : int ) -> Dict : \"\"\" This task starts a new Stitch replication job using the provided source. Args: access_token: API access token that will be used to authenticate API calls. source_id: integer identifier of the source that will be used in the replication job. Returns: Replication job API JSON response. \"\"\" stitch_client = StitchClient ( access_token = access_token ) return stitch_client . start_replication_job ( source_id = source_id )","title":"Tasks"},{"location":"tasks/#prefect_stitch.tasks","text":"Collection of tasks to interact with Stitch APIs.","title":"tasks"},{"location":"tasks/#prefect_stitch.tasks.start_replication_job","text":"This task starts a new Stitch replication job using the provided source. Parameters: Name Type Description Default access_token str API access token that will be used to authenticate API calls. required source_id int integer identifier of the source that will be used in the replication job. required Returns: Type Description Dict Replication job API JSON response. Source code in prefect_stitch/tasks.py 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 @task def start_replication_job ( access_token : str , source_id : int ) -> Dict : \"\"\" This task starts a new Stitch replication job using the provided source. Args: access_token: API access token that will be used to authenticate API calls. source_id: integer identifier of the source that will be used in the replication job. Returns: Replication job API JSON response. \"\"\" stitch_client = StitchClient ( access_token = access_token ) return stitch_client . start_replication_job ( source_id = source_id )","title":"start_replication_job()"}]}